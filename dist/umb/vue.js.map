{"version":3,"file":"vue.js","sources":["../../src/observe/index.js","../../src/init/initState.js","../../src/init/index.js","../../src/index.js"],"sourcesContent":["/**\n * @file 把data中的数据都使用objec.defineProperty重新定义 es5方法\n * @param {Objec} data\n */\n\n // object.defineProperty不能兼容ie8 及以下 vue2 无法兼容ie8版本\nexport function observe(data) {\n    console.log(data);\n}\n","/**\n *@file vue初始化状态\n * @param {Object} vm  实例化对象\n */\n\nimport {observe} from '../observe/index';\n\nexport function initState(vm) {\n    const opts = vm.$options;\n    // vue的数据来源 属性 方法 数据 计算属性 watch\n    if (opts.props) {\n        initProps(vm);\n    }\n\n    if (opts.methods) {\n        initMethods(vm);\n    }\n\n    if (opts.data) {\n        initData(vm);\n    }\n\n    if (opts.computed) {\n        initComputed(vm);\n    }\n\n    if (opts.watch) {\n        initWatch(vm);\n    }\n}\n\nfunction initProps() {}\n\nfunction initMethods() {}\n\nfunction initData(vm) {\n    // 数据初始化工作\n    let data = vm.$options.data; // 用户传递的data\n    // 用户传递可能是Object、function我们最终需要的是Object,并需要保证用户在data中操作时的this指向实例\n    data = typeof data === 'function' ? data.call(vm) : data;\n\n    // 为了用户也能够拿到数据增加一个属性_data\n    vm._data = data;\n\n    // 对象劫持 用户改变了数据，我希望可以得到通知，根据用户的修改进行一些操作，例如刷新页面\n    // MVVM模式 数据变化可以驱动视图变化\n\n    // Object.defineProperty () 给属性增加get方法和set方法\n    observe(data);  // 响应式原理\n\n}\n\nfunction initComputed() {}\n\nfunction initWatch() {}","/**\n* @file 在Vue原型上添加一个_init方法\n*/\n\nimport {initState} from './initState';\n\nexport function initMixin(Vue) {\n    // 初始化流程\n    Vue.prototype._init = function (options) {\n        // 数据劫持\n        const vm = this; // vue中使用this.$options指代的是用户传递的属性\n        vm.$options = options;\n        \n        // 初始化状态\n        initState(vm); // 分割代码\n    };\n}","/**\n * @file Vue的核心代码，只是Vue的一个声明\n*/\n\nimport{initMixin} from './init/index';\n\n/**\n* \n* @param {Object} options // 实例对象\n*/\nfunction Vue(options) {\n\n    // 进行Vue的初始化操作\n    this._init(options);\n}\n\n// 通过引入文件的方式，给Vue原型上添加方法\ninitMixin(Vue);\n\nexport default Vue;\n"],"names":["observe","data","console","log","initState","vm","opts","$options","props","methods","initData","computed","watch","call","_data","initMixin","Vue","prototype","_init","options"],"mappings":";;;;;;IAAA;IACA;IACA;IACA;IAEC;IACM,SAASA,OAAT,CAAiBC,IAAjB,EAAuB;IAC1BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;IACH;;ICRD;IACA;IACA;IACA;IAIO,SAASG,SAAT,CAAmBC,EAAnB,EAAuB;IAC1B,MAAMC,IAAI,GAAGD,EAAE,CAACE,QAAhB,CAD0B;;IAG1B,MAAID,IAAI,CAACE,KAAT,EAAgB;;IAIhB,MAAIF,IAAI,CAACG,OAAT,EAAkB;;IAIlB,MAAIH,IAAI,CAACL,IAAT,EAAe;IACXS,IAAAA,QAAQ,CAACL,EAAD,CAAR;IACH;;IAED,MAAIC,IAAI,CAACK,QAAT,EAAmB;;IAInB,MAAIL,IAAI,CAACM,KAAT,EAAgB;IAGnB;;IAMD,SAASF,QAAT,CAAkBL,EAAlB,EAAsB;IAClB;IACA,MAAIJ,IAAI,GAAGI,EAAE,CAACE,QAAH,CAAYN,IAAvB,CAFkB;IAGlB;;IACAA,EAAAA,IAAI,GAAG,OAAOA,IAAP,KAAgB,UAAhB,GAA6BA,IAAI,CAACY,IAAL,CAAUR,EAAV,CAA7B,GAA6CJ,IAApD,CAJkB;;IAOlBI,EAAAA,EAAE,CAACS,KAAH,GAAWb,IAAX,CAPkB;IAUlB;IAEA;;IACAD,EAAAA,OAAO,CAACC,IAAD,CAAP,CAbkB;IAerB;;IClDD;IACA;IACA;IAIO,SAASc,SAAT,CAAmBC,GAAnB,EAAwB;IAC3B;IACAA,EAAAA,GAAG,CAACC,SAAJ,CAAcC,KAAd,GAAsB,UAAUC,OAAV,EAAmB;IACrC;IACA,QAAMd,EAAE,GAAG,IAAX,CAFqC;;IAGrCA,IAAAA,EAAE,CAACE,QAAH,GAAcY,OAAd,CAHqC;;IAMrCf,IAAAA,SAAS,CAACC,EAAD,CAAT,CANqC;IAOxC,GAPD;IAQH;;IChBD;IACA;IACA;IAIA;IACA;IACA;IACA;;IACA,SAASW,GAAT,CAAaG,OAAb,EAAsB;IAElB;IACA,OAAKD,KAAL,CAAWC,OAAX;IACH;;;IAGDJ,SAAS,CAACC,GAAD,CAAT;;;;;;;;"}